version: '3.4'

services:
  api:
    container_name: fastapi
    build:
      context: ./app
      dockerfile: ./Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
      - ./output:/output
    environment:
      - DOCKER_RUNNING=true
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpassword
      - POSTGRES_DB=vectordb
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    healthcheck:
      test: wget --no-verbose -O /dev/null --tries=1 http://localhost:8000/api/health/check || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  migrations:
    build:
      context: ./app
      dockerfile: ./Dockerfile
    command: /bin/bash -c "chmod +x /app/scripts/run_migrations.sh && /app/scripts/run_migrations.sh"
    volumes:
      - ./app:/app
    environment:
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpassword
      - POSTGRES_DB=vectordb
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

  mesop-app:
    container_name: mesop
    build:
      context: ./mesop
      dockerfile: ./Dockerfile
    volumes:
     - ./mesop/src:/srv/mesop-app/src
    ports:
      - 8080:8080
    environment:
      - PYTHONUNBUFFERED=1
      - DOCKER_RUNNING=true
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpassword
      - POSTGRES_DB=vectordb
    depends_on:
      api:
        condition: service_healthy
    env_file:
      - ./.env

  db:
    hostname: db
    image: pgvector/pgvector:pg15
    ports:
     - 5432:5432
    environment:
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpassword
      - POSTGRES_DB=vectordb
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d vectordb && psql -U testuser -d vectordb -c 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

volumes:
  postgres_data:
